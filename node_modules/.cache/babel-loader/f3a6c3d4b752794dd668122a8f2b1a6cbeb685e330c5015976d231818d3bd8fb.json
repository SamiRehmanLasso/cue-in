{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";// You can create this CSS file to style your app\nimport{initializeApp}from\"firebase/app\";import{getDatabase,ref,push,onValue}from\"firebase/database\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const firebaseConfig={apiKey:\"AIzaSyCpQIdXWPP5DLH8vsErmCKIPsXVHzvKAi4\",authDomain:\"snooker-app-demo.firebaseapp.com\",projectId:\"snooker-app-demo\",storageBucket:\"snooker-app-demo.appspot.com\",messagingSenderId:\"388093677326\",appId:\"1:388093677326:web:67c3de99f6df992b01915f\",databaseURL:\"https://snooker-app-demo-default-rtdb.asia-southeast1.firebasedatabase.app\"};const firebaseApp=initializeApp(firebaseConfig);const database=getDatabase();function App(){// State to manage customer entries for all tables\nconst[customerEntries,setCustomerEntries]=useState([]);// State for input fields for all tables\nconst[tablesData,setTablesData]=useState(Array.from({length:7},()=>({customerName:\"\",loginTime:\"\",logoutTime:\"\",totalTime:0,totalAmount:0,loginDisabled:true,logoutDisabled:true})));// Function to handle typing in customer name\nconst handleNameChange=(event,tableIndex)=>{const newTablesData=[...tablesData];newTablesData[tableIndex].customerName=event.target.value;newTablesData[tableIndex].loginDisabled=event.target.value===\"\"?true:false;setTablesData(newTablesData);};// Function to handle Log In button click\nconst handleLogin=tableIndex=>{const currentTime=new Date();const tableDataCopy=[...tablesData];tableDataCopy[tableIndex].loginTime=\"\".concat(currentTime.getHours(),\":\").concat(currentTime.getMinutes());tableDataCopy[tableIndex].logoutDisabled=false;tableDataCopy[tableIndex].loginDisabled=true;setTablesData(tableDataCopy);};// Function to handle Log Out button click\nconst handleLogout=async tableIndex=>{try{const currentTime=new Date();const tableDataCopy=[...tablesData];tableDataCopy[tableIndex].logoutTime=\"\".concat(currentTime.getHours(),\":\").concat(currentTime.getMinutes());const loginTimestamp=new Date(\"2024-01-01 \".concat(tableDataCopy[tableIndex].loginTime));const logoutTimestamp=new Date(\"2024-01-01 \".concat(currentTime.getHours(),\":\").concat(currentTime.getMinutes()));const timeDifference=(logoutTimestamp-loginTimestamp)/(1000*60);tableDataCopy[tableIndex].totalTime=timeDifference;const amount=timeDifference>=1?timeDifference*5:0;tableDataCopy[tableIndex].totalAmount=amount.toFixed(2);tableDataCopy[tableIndex].logoutDisabled=true;tableDataCopy[tableIndex].loginDisabled=false;setTablesData(tableDataCopy);// Create a reference to the database node for the specific table\nconst tableRef=ref(database,\"tables/table\".concat(tableIndex+1));// Push the new entry to the database\nawait push(tableRef,{customerName:tableDataCopy[tableIndex].customerName,loginTime:tableDataCopy[tableIndex].loginTime,logoutTime:tableDataCopy[tableIndex].logoutTime,totalTime:tableDataCopy[tableIndex].totalTime,totalAmount:tableDataCopy[tableIndex].totalAmount});// Add entry to the customerEntries array\nif(tableDataCopy[tableIndex].customerName.trim()!==\"\"){setCustomerEntries(prevEntries=>[...prevEntries,{id:Date.now(),name:tableDataCopy[tableIndex].customerName,tableNumber:tableIndex+1,totalAmount:tableDataCopy[tableIndex].totalAmount,totalTime:tableDataCopy[tableIndex].totalTime}]);}}catch(error){console.error(\"Error handling logout:\",error);}};// Function to handle New Entry button click\nconst handleNewEntry=tableIndex=>{const tableDataCopy=[...tablesData];tableDataCopy[tableIndex]={customerName:\"\",loginTime:\"\",logoutTime:\"\",totalTime:0,totalAmount:0,loginDisabled:true,logoutDisabled:true};setTablesData(tableDataCopy);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Cue In Snooker Club\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-container\",children:tablesData.map((tableData,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"table\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Table \",index+1]}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter customer name\",value:tableData.customerName,onChange:e=>handleNameChange(e,index),required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Login Time\",value:tableData.loginTime,readOnly:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Logout Time\",value:tableData.logoutTime,readOnly:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Total Time (minutes)\",value:tableData.totalTime,readOnly:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Total Amount\",value:\"$\".concat(tableData.totalAmount),readOnly:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleLogin(index),disabled:tableData.loginDisabled,children:\"Log In\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleLogout(index),disabled:tableData.logoutDisabled,children:\"Log Out\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleNewEntry(index),disabled:tableData.customerName.trim()===\"\",children:\"New Entry\"})]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"last-entries\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Last 5 Entries\"}),/*#__PURE__*/_jsx(\"ul\",{children:customerEntries.slice(0,5).map(entry=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:entry.name}),\" - Table: \",entry.tableNumber,\", Total Time: \",entry.totalTime,\" minutes, Total Amount: $\",entry.totalAmount]},entry.id))})]})]});}export default App;","map":{"version":3,"names":["React","useState","initializeApp","getDatabase","ref","push","onValue","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","firebaseApp","database","App","customerEntries","setCustomerEntries","tablesData","setTablesData","Array","from","length","customerName","loginTime","logoutTime","totalTime","totalAmount","loginDisabled","logoutDisabled","handleNameChange","event","tableIndex","newTablesData","target","value","handleLogin","currentTime","Date","tableDataCopy","concat","getHours","getMinutes","handleLogout","loginTimestamp","logoutTimestamp","timeDifference","amount","toFixed","tableRef","trim","prevEntries","id","now","name","tableNumber","error","console","handleNewEntry","className","children","map","tableData","index","type","placeholder","onChange","e","required","readOnly","onClick","disabled","slice","entry"],"sources":["/Users/samiurrehman/Documents/Snooker Demo/cue-in/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // You can create this CSS file to style your app\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, push, onValue } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpQIdXWPP5DLH8vsErmCKIPsXVHzvKAi4\",\n  authDomain: \"snooker-app-demo.firebaseapp.com\",\n  projectId: \"snooker-app-demo\",\n  storageBucket: \"snooker-app-demo.appspot.com\",\n  messagingSenderId: \"388093677326\",\n  appId: \"1:388093677326:web:67c3de99f6df992b01915f\",\n  databaseURL:\n    \"https://snooker-app-demo-default-rtdb.asia-southeast1.firebasedatabase.app\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst database = getDatabase();\n\nfunction App() {\n  // State to manage customer entries for all tables\n  const [customerEntries, setCustomerEntries] = useState([]);\n\n  // State for input fields for all tables\n  const [tablesData, setTablesData] = useState(\n    Array.from({ length: 7 }, () => ({\n      customerName: \"\",\n      loginTime: \"\",\n      logoutTime: \"\",\n      totalTime: 0,\n      totalAmount: 0,\n      loginDisabled: true,\n      logoutDisabled: true,\n    }))\n  );\n\n  // Function to handle typing in customer name\n  const handleNameChange = (event, tableIndex) => {\n    const newTablesData = [...tablesData];\n    newTablesData[tableIndex].customerName = event.target.value;\n    newTablesData[tableIndex].loginDisabled =\n      event.target.value === \"\" ? true : false;\n    setTablesData(newTablesData);\n  };\n\n  // Function to handle Log In button click\n  const handleLogin = (tableIndex) => {\n    const currentTime = new Date();\n    const tableDataCopy = [...tablesData];\n    tableDataCopy[\n      tableIndex\n    ].loginTime = `${currentTime.getHours()}:${currentTime.getMinutes()}`;\n    tableDataCopy[tableIndex].logoutDisabled = false;\n    tableDataCopy[tableIndex].loginDisabled = true;\n    setTablesData(tableDataCopy);\n  };\n\n  // Function to handle Log Out button click\n  const handleLogout = async (tableIndex) => {\n    try {\n      const currentTime = new Date();\n      const tableDataCopy = [...tablesData];\n      tableDataCopy[\n        tableIndex\n      ].logoutTime = `${currentTime.getHours()}:${currentTime.getMinutes()}`;\n\n      const loginTimestamp = new Date(\n        `2024-01-01 ${tableDataCopy[tableIndex].loginTime}`\n      );\n      const logoutTimestamp = new Date(\n        `2024-01-01 ${currentTime.getHours()}:${currentTime.getMinutes()}`\n      );\n      const timeDifference = (logoutTimestamp - loginTimestamp) / (1000 * 60);\n      tableDataCopy[tableIndex].totalTime = timeDifference;\n      const amount = timeDifference >= 1 ? timeDifference * 5 : 0;\n      tableDataCopy[tableIndex].totalAmount = amount.toFixed(2);\n      tableDataCopy[tableIndex].logoutDisabled = true;\n      tableDataCopy[tableIndex].loginDisabled = false;\n      setTablesData(tableDataCopy);\n\n      // Create a reference to the database node for the specific table\n      const tableRef = ref(database, `tables/table${tableIndex + 1}`);\n\n      // Push the new entry to the database\n      await push(tableRef, {\n        customerName: tableDataCopy[tableIndex].customerName,\n        loginTime: tableDataCopy[tableIndex].loginTime,\n        logoutTime: tableDataCopy[tableIndex].logoutTime,\n        totalTime: tableDataCopy[tableIndex].totalTime,\n        totalAmount: tableDataCopy[tableIndex].totalAmount,\n      });\n\n      // Add entry to the customerEntries array\n      if (tableDataCopy[tableIndex].customerName.trim() !== \"\") {\n        setCustomerEntries((prevEntries) => [\n          ...prevEntries,\n          {\n            id: Date.now(),\n            name: tableDataCopy[tableIndex].customerName,\n            tableNumber: tableIndex + 1,\n            totalAmount: tableDataCopy[tableIndex].totalAmount,\n            totalTime: tableDataCopy[tableIndex].totalTime,\n          },\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error handling logout:\", error);\n    }\n  };\n\n  // Function to handle New Entry button click\n  const handleNewEntry = (tableIndex) => {\n    const tableDataCopy = [...tablesData];\n    tableDataCopy[tableIndex] = {\n      customerName: \"\",\n      loginTime: \"\",\n      logoutTime: \"\",\n      totalTime: 0,\n      totalAmount: 0,\n      loginDisabled: true,\n      logoutDisabled: true,\n    };\n    setTablesData(tableDataCopy);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Cue In Snooker Club</h1>\n\n      <div className=\"grid-container\">\n        {/* Entry Form for each table */}\n        {tablesData.map((tableData, index) => (\n          <div key={index} className=\"table\">\n            <h2>Table {index + 1}</h2>\n            <form>\n              <input\n                type=\"text\"\n                placeholder=\"Enter customer name\"\n                value={tableData.customerName}\n                onChange={(e) => handleNameChange(e, index)}\n                required\n              />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Login Time\"\n                value={tableData.loginTime}\n                readOnly\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Logout Time\"\n                value={tableData.logoutTime}\n                readOnly\n              />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Total Time (minutes)\"\n                value={tableData.totalTime}\n                readOnly\n              />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Total Amount\"\n                value={`$${tableData.totalAmount}`}\n                readOnly\n              />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => handleLogin(index)}\n                disabled={tableData.loginDisabled}\n              >\n                Log In\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => handleLogout(index)}\n                disabled={tableData.logoutDisabled}\n              >\n                Log Out\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => handleNewEntry(index)}\n                disabled={tableData.customerName.trim() === \"\"}\n              >\n                New Entry\n              </button>\n            </form>\n          </div>\n        ))}\n      </div>\n\n      {/* Last 5 Entries */}\n      <div className=\"last-entries\">\n        <h2>Last 5 Entries</h2>\n        <ul>\n          {customerEntries.slice(0, 5).map((entry) => (\n            <li key={entry.id}>\n              <strong>{entry.name}</strong> - Table: {entry.tableNumber}, Total\n              Time: {entry.totalTime} minutes, Total Amount: $\n              {entry.totalAmount}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}